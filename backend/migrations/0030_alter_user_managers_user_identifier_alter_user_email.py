# Generated by Django 4.2.15 on 2024-10-31 14:45

import django.contrib.auth.models
from django.db import migrations, models
from django.utils.crypto import get_random_string

def generate_unique_identifier(apps, schema_editor):
    User = apps.get_model('backend', 'User')
    for user in User.objects.all():
        if user.email:
            user.identifier = user.email
        elif user.phone_number:
            user.identifier = user.phone_number
        else:
            # Generate a random unique identifier
            while True:
                temp_identifier = f'user_{get_random_string(32)}'
                if not User.objects.filter(identifier=temp_identifier).exists():
                    user.identifier = temp_identifier
                    break
        user.save()

class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0029_alter_user_email_alter_user_phone_number'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='identifier',
            field=models.CharField(max_length=255, null=True),  # First make it nullable
            preserve_default=False,
        ),
        migrations.RunPython(generate_unique_identifier),  # Run the data migration
        migrations.AlterField(
            model_name='user',
            name='identifier',
            field=models.CharField(max_length=255, unique=True),  # Then make it unique and non-null
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
    ]